

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model SuperAdmin {
  id            String        @id @default(cuid())
  email         String        @unique
  name          String        @default("Super Admin")   @unique   
  password      String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  
}

model Organization {
  id          String   @id @default(cuid())
  name        String
  description String?
  logo        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       User[]
  procedures  Procedure[]
  clients     Client[]
  admins      Admin[]
}

enum Role {
  ADMIN
  USER
  CLIENT
  EMPLOYEE
}

model User {
  id            String        @id @default(cuid())
  email         String        @unique
  name          String
  password      String
  role          Role          @default(USER)
  organization  Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  client       Client?
  admin        Admin?

  
}

model Client {
  id          String   @id @default(cuid())
  name        String
  email       String

  phone       String?
  passport    String?
  address     String?
  birthDate   DateTime?

  fatherLastName String?
  fatherFirstName  String?

  motherLastName String?
  motherFirstName  String?

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId      String  @unique
  user       User     @relation(fields: [userId], references: [id])

  organization  Organization @relation(fields: [organizationId], references: [id])
  organizationId String
}

model Admin {
  id          String   @id @default(cuid())
  name        String
  email       String
  phone       String
  address     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId      String  @unique
  user       User     @relation(fields: [userId], references: [id])

  organization  Organization @relation(fields: [organizationId], references: [id])
  organizationId String
}



model StepProcedure {
  id          String   @id @default(cuid())
  name        String
  description String
  price       Float?
  procedure   Procedure @relation(fields: [procedureId], references: [id])
  procedureId String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Procedure {
  id          String          @id @default(cuid())
  name        String
  description String
  price       Float?
  steps       StepProcedure[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  organization  Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
}